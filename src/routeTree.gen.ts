/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LedgersImport } from './routes/ledgers'
import { Route as LedgerImport } from './routes/_ledger'
import { Route as LedgerVendorsImport } from './routes/_ledger/vendors'
import { Route as LedgerDashboardImport } from './routes/_ledger/dashboard'
import { Route as LedgerCategoriesImport } from './routes/_ledger/categories'
import { Route as LedgerAccountsAccountIdImport } from './routes/_ledger/accounts/$accountId'

// Create/Update Routes

const LedgersRoute = LedgersImport.update({
  id: '/ledgers',
  path: '/ledgers',
  getParentRoute: () => rootRoute,
} as any)

const LedgerRoute = LedgerImport.update({
  id: '/_ledger',
  getParentRoute: () => rootRoute,
} as any)

const LedgerVendorsRoute = LedgerVendorsImport.update({
  id: '/vendors',
  path: '/vendors',
  getParentRoute: () => LedgerRoute,
} as any)

const LedgerDashboardRoute = LedgerDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LedgerRoute,
} as any)

const LedgerCategoriesRoute = LedgerCategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => LedgerRoute,
} as any)

const LedgerAccountsAccountIdRoute = LedgerAccountsAccountIdImport.update({
  id: '/accounts/$accountId',
  path: '/accounts/$accountId',
  getParentRoute: () => LedgerRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_ledger': {
      id: '/_ledger'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LedgerImport
      parentRoute: typeof rootRoute
    }
    '/ledgers': {
      id: '/ledgers'
      path: '/ledgers'
      fullPath: '/ledgers'
      preLoaderRoute: typeof LedgersImport
      parentRoute: typeof rootRoute
    }
    '/_ledger/categories': {
      id: '/_ledger/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof LedgerCategoriesImport
      parentRoute: typeof LedgerImport
    }
    '/_ledger/dashboard': {
      id: '/_ledger/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LedgerDashboardImport
      parentRoute: typeof LedgerImport
    }
    '/_ledger/vendors': {
      id: '/_ledger/vendors'
      path: '/vendors'
      fullPath: '/vendors'
      preLoaderRoute: typeof LedgerVendorsImport
      parentRoute: typeof LedgerImport
    }
    '/_ledger/accounts/$accountId': {
      id: '/_ledger/accounts/$accountId'
      path: '/accounts/$accountId'
      fullPath: '/accounts/$accountId'
      preLoaderRoute: typeof LedgerAccountsAccountIdImport
      parentRoute: typeof LedgerImport
    }
  }
}

// Create and export the route tree

interface LedgerRouteChildren {
  LedgerCategoriesRoute: typeof LedgerCategoriesRoute
  LedgerDashboardRoute: typeof LedgerDashboardRoute
  LedgerVendorsRoute: typeof LedgerVendorsRoute
  LedgerAccountsAccountIdRoute: typeof LedgerAccountsAccountIdRoute
}

const LedgerRouteChildren: LedgerRouteChildren = {
  LedgerCategoriesRoute: LedgerCategoriesRoute,
  LedgerDashboardRoute: LedgerDashboardRoute,
  LedgerVendorsRoute: LedgerVendorsRoute,
  LedgerAccountsAccountIdRoute: LedgerAccountsAccountIdRoute,
}

const LedgerRouteWithChildren =
  LedgerRoute._addFileChildren(LedgerRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LedgerRouteWithChildren
  '/ledgers': typeof LedgersRoute
  '/categories': typeof LedgerCategoriesRoute
  '/dashboard': typeof LedgerDashboardRoute
  '/vendors': typeof LedgerVendorsRoute
  '/accounts/$accountId': typeof LedgerAccountsAccountIdRoute
}

export interface FileRoutesByTo {
  '': typeof LedgerRouteWithChildren
  '/ledgers': typeof LedgersRoute
  '/categories': typeof LedgerCategoriesRoute
  '/dashboard': typeof LedgerDashboardRoute
  '/vendors': typeof LedgerVendorsRoute
  '/accounts/$accountId': typeof LedgerAccountsAccountIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_ledger': typeof LedgerRouteWithChildren
  '/ledgers': typeof LedgersRoute
  '/_ledger/categories': typeof LedgerCategoriesRoute
  '/_ledger/dashboard': typeof LedgerDashboardRoute
  '/_ledger/vendors': typeof LedgerVendorsRoute
  '/_ledger/accounts/$accountId': typeof LedgerAccountsAccountIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/ledgers'
    | '/categories'
    | '/dashboard'
    | '/vendors'
    | '/accounts/$accountId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/ledgers'
    | '/categories'
    | '/dashboard'
    | '/vendors'
    | '/accounts/$accountId'
  id:
    | '__root__'
    | '/_ledger'
    | '/ledgers'
    | '/_ledger/categories'
    | '/_ledger/dashboard'
    | '/_ledger/vendors'
    | '/_ledger/accounts/$accountId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LedgerRoute: typeof LedgerRouteWithChildren
  LedgersRoute: typeof LedgersRoute
}

const rootRouteChildren: RootRouteChildren = {
  LedgerRoute: LedgerRouteWithChildren,
  LedgersRoute: LedgersRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_ledger",
        "/ledgers"
      ]
    },
    "/_ledger": {
      "filePath": "_ledger.tsx",
      "children": [
        "/_ledger/categories",
        "/_ledger/dashboard",
        "/_ledger/vendors",
        "/_ledger/accounts/$accountId"
      ]
    },
    "/ledgers": {
      "filePath": "ledgers.tsx"
    },
    "/_ledger/categories": {
      "filePath": "_ledger/categories.tsx",
      "parent": "/_ledger"
    },
    "/_ledger/dashboard": {
      "filePath": "_ledger/dashboard.tsx",
      "parent": "/_ledger"
    },
    "/_ledger/vendors": {
      "filePath": "_ledger/vendors.tsx",
      "parent": "/_ledger"
    },
    "/_ledger/accounts/$accountId": {
      "filePath": "_ledger/accounts/$accountId.tsx",
      "parent": "/_ledger"
    }
  }
}
ROUTE_MANIFEST_END */
